// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Diagnostics;
using System.Collections.Generic;

namespace FataAquana
{
	public partial class AankoopController : NSViewController
	{
		private PersoonController _parentController;
		private AankoopModel _aankoop;

		public List<AankoopModel> Aankopen { get; set; } = new List<AankoopModel>();

		public AankoopController(IntPtr handle) : base(handle)
		{

		}

		#region Override Methods
		public override void AwakeFromNib()
		{
			Debug.WriteLine("Start: AankoopController.AwakeFromNib");

			//base.AwakeFromNib();

			_parentController = this.PresentingViewController as PersoonController;
			if (_parentController != null)
			{
				Aankoop = _parentController.SelectedAankoop;

				if (Aankoop == null) Aankoop = new AankoopModel();

				if (ApparatenCombobox != null)
				{
					ApparatenCombobox.UsesDataSource = true;
					ApparatenCombobox.Completes = true;
					ApparatenCombobox.DataSource = new ApparatenComboDS();

					if (!Aankoop.ApparaatNaam.Equals(string.Empty))
					{
						var index = ApparatenCombobox.DataSource.IndexOfItem(ApparatenCombobox, Aankoop.ApparaatNaam);
						ApparatenCombobox.SelectItem(index);
					}
				}

				if (GekochtOpButton != null)
				{
					GekochtOpButton.State = NSCellStateValue.Off;
					GekochtOpDate.Enabled = false;
				}
			}
			Debug.WriteLine("Start: AankoopController.AwakeFromNib");
		}

		[Export("Aankoop")]
		public AankoopModel Aankoop
		{
			get { return _aankoop; }
			set
			{
				WillChangeValue("Aankoop");
				_aankoop = value;
				DidChangeValue("Aankoop");
			}
		}
		#endregion

		partial void CloseButton(NSObject sender)
		{
			Debug.WriteLine("Start: AankoopController.CloseButton");

			DismissController(this);

			Debug.WriteLine("Einde: AankoopController.CloseButton");
		}

		partial void SaveButton(NSObject sender)
		{
			Debug.WriteLine("Start: AankoopController.SaveButton");

			if (ApparatenCombobox.DataSource != null)
			{
				ApparatenComboDS comboDS = ApparatenCombobox.DataSource as ApparatenComboDS;

				var selectedAankoop = comboDS.Apparaten[(int)ApparatenCombobox.SelectedIndex];

				Aankoop.PersoonID = _parentController.Persoon.ID;
				Aankoop.ApparaatID = selectedAankoop.ID;
				if (GekochtOpButton.State.Equals(NSCellStateValue.On))
				{
					Aankoop.GekochtOp = GekochtOpDate.DateValue;
				}

				Aankoop.Create(AppDelegate.Conn);

				if (_parentController != null)
				{
					_parentController.LoadTables();
				}
			}

			DismissController(this);

			Debug.WriteLine("Einde: AankoopController.SaveButton");
		}

		partial void GekochtOpEnable(NSObject sender)
		{
			if (GekochtOpButton.State.Equals(NSCellStateValue.On))
			{
				GekochtOpDate.Enabled = true;
			}
			else
			{
				GekochtOpDate.Enabled = false;
			}
		}
	}
}
