// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Diagnostics;
using Mono.Data.Sqlite;
using System.Data;
using System.Collections.Generic;

namespace FataAquana
{
	public partial class GevolgdeOpleidingController : NSViewController
	{
		private PersoonController _parentController;
		private GevolgdeOpleidingModel _gevolgdeopleiding;

		public List<OpleidingModel> Opleidingen { get; set; } = new List<OpleidingModel>();

		public GevolgdeOpleidingController (IntPtr handle) : base (handle)
		{
			
		}

		#region Override Methods
		public override void AwakeFromNib()
		{
			Debug.WriteLine("Start: GevolgdeOpleidingController.AwakeFromNib");

			//base.AwakeFromNib();

			_parentController = this.PresentingViewController as PersoonController;
			if (_parentController != null)
			{
				GevolgdeOpleiding = _parentController.SelectedGevolgdeOpleiding;

				if (GevolgdeOpleiding == null) GevolgdeOpleiding = new GevolgdeOpleidingModel();

				if (OpleidingenCombobox != null)
				{
					OpleidingenCombobox.UsesDataSource = true;
					OpleidingenCombobox.Completes = true;
					OpleidingenCombobox.DataSource = new OpleidingenComboDS();

					if (!GevolgdeOpleiding.OpleidingNaam.Equals(string.Empty))
					{
						var index = OpleidingenCombobox.DataSource.IndexOfItem(OpleidingenCombobox, GevolgdeOpleiding.OpleidingNaam);
						OpleidingenCombobox.SelectItem(index);
					}
				}

				if (GeslaagdOpButton != null)
				{
					GeslaagdOpButton.State = NSCellStateValue.Off;
					GeslaagdOpDate.Enabled = false;
				}

				if (VerlopenOpButton != null)
				{
					VerlopenOpButton.State = NSCellStateValue.Off;
					VerlopenOpDate.Enabled = false;
				}
			}
			Debug.WriteLine("Start: GevolgdeOpleidingController.AwakeFromNib");
		}

		[Export("GevolgdeOpleiding")]
		public GevolgdeOpleidingModel GevolgdeOpleiding
		{
			get { return _gevolgdeopleiding; }
			set
			{
				WillChangeValue("GevolgdeOpleiding");
				_gevolgdeopleiding = value;
				DidChangeValue("GevolgdeOpleiding");
			}
		}
		#endregion

		partial void CloseButton(NSObject sender)
		{
			Debug.WriteLine("Start: GevolgdeOpleidingController.CloseButton");

			DismissController(this);

			Debug.WriteLine("Einde: GevolgdeOpleidingController.CloseButton");
		}

		partial void SaveButton(NSObject sender)
		{
			Debug.WriteLine("Start: GevolgdeOpleidingController.SaveButton");

			if (OpleidingenCombobox.DataSource != null)
			{
				OpleidingenComboDS comboDS = OpleidingenCombobox.DataSource as OpleidingenComboDS;

				var selectedOpleiding = comboDS.Opleidingen[(int)OpleidingenCombobox.SelectedIndex];

				GevolgdeOpleiding.PersoonID = _parentController.Persoon.ID;
				GevolgdeOpleiding.OpleidingID = selectedOpleiding.ID;
				if (GeslaagdOpButton.State.Equals(NSCellStateValue.On))
				{
					GevolgdeOpleiding.GeslaagdOp = GeslaagdOpDate.DateValue;
				}
				if (VerlopenOpButton.State.Equals(NSCellStateValue.On))
				{
					GevolgdeOpleiding.VerlopenOp = VerlopenOpDate.DateValue;
				}

				GevolgdeOpleiding.Create(AppDelegate.Conn);

				if (_parentController != null)
				{
					_parentController.LoadTables();
				}
			}

			DismissController(this);

			Debug.WriteLine("Einde: GevolgdeOpleidingController.SaveButton");
		}

		partial void GeslaagdOpEnable(NSObject sender)
		{
			if (GeslaagdOpButton.State.Equals(NSCellStateValue.On))
			{
				GeslaagdOpDate.Enabled = true;
			}
			else 
			{ 
				GeslaagdOpDate.Enabled = false; 
			}
		}

		partial void VerlopenOpEnable(NSObject sender)
		{
			if (VerlopenOpButton.State.Equals(NSCellStateValue.On))
			{
				VerlopenOpDate.Enabled = true;
			}
			else
			{
				VerlopenOpDate.Enabled = false;
			}
		}
	}
}
