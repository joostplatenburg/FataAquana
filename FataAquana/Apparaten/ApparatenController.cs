// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Diagnostics;

namespace FataAquana
{
	public partial class ApparatenController : NSViewController
	{
		public ApparaatModel SelectedApparaat = null;
		public ApparatenDS ds = null;

		#region Computed Properties

		#endregion

		#region Constructors
		// Called when created from unmanaged code
		public ApparatenController(IntPtr handle) : base (handle)
		{
			Initialize();
		}

		// Called when created directly from a XIB file
		[Export("initWithCoder:")]
		public ApparatenController(NSCoder coder) : base (coder)
		{
			Initialize();
		}

		// Call to load from the XIB/NIB file
		public ApparatenController() : base("subviewApparaten", NSBundle.MainBundle)
		{
			Initialize();
		}

		// Shared initialization code
		void Initialize()
		{
		}
		#endregion

		#region Override Methods
		public override void AwakeFromNib()
		{
			base.AwakeFromNib();

			// Create the Occupation Table Data Source and populate it
			ds = new ApparatenDS(AppDelegate.Conn);

			if (ApparatenTable != null)
			{
				// Populate the Product Table
				ApparatenTable.DataSource = ds;
				ApparatenTable.Delegate = new ApparatenDelegate(ds);
			}
		}
		#endregion

		#region Custom Methods
		partial void ApparaatAddClicked(NSButton sender)
		{
			Debug.WriteLine("Start: ApparatenController.ApparaatAddClicked");

			SelectedApparaat = null;

			PerformSegue("ApparaatSegue", this);

			Debug.WriteLine("Einde: ApparatenController.ApparaatAddClicked");
		}

		partial void ApparaatRemoveClicked(NSButton sender)
		{
			Debug.WriteLine("Start: ApparatenController.ApparaatRemoveClicked");

			if ((int)ApparatenTable.SelectedRow >= 0)
			{
				SelectedApparaat = ds.Apparaten[(int)ApparatenTable.SelectedRow] as ApparaatModel;

				// Configure alert
				var alert = new NSAlert()
				{
					AlertStyle = NSAlertStyle.Informational,
					InformativeText = $"Weet je zeker dat je het apparaat {SelectedApparaat.ApparaatNaam} wilt verwijderen?\n\nDit kan niet meer ongedaan gemaakt worden.",
					MessageText = $"Delete {SelectedApparaat.ApparaatNaam}?",
				};
				alert.AddButton("Cancel");
				alert.AddButton("Delete");
				alert.BeginSheetForResponse(this.View.Window, (result) =>
				{
					// Should we delete the requested row?
					if (result == 1001)
					{
						// Remove the given row from the dataset
						SelectedApparaat.Delete(AppDelegate.Conn);
						ds.Apparaten.Remove(SelectedApparaat);
						ReloadTable();
					}
				});
			}

			Debug.WriteLine("Einde: ApparatenController.ApparaatRemoveClicked");
		}

		[Export("RowDoubleClicked:")]
		public void RowDoubleClicked(NSObject sender)
		{
			Debug.WriteLine("Start: ApparatenController.RowDoubleClicked");

			SelectedApparaat = ds.Apparaten[(int)ApparatenTable.SelectedRow] as ApparaatModel;

			PerformSegue("ApparaatSegue", this);

			Debug.WriteLine("Einde: ApparatenController.RowDoubleClicked");
		}

		public void ReloadTable()
		{
			ApparatenTable.ReloadData();
		}
		#endregion
	}
}
