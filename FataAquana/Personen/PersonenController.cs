// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Diagnostics;

namespace FataAquana
{
	public partial class PersonenController : NSViewController
	{
		private PersonenDS ds = null;

		#region Computed Properties
		// Strongly typed view accessor
		public new PersonenView View
		{
			get
			{
				return (PersonenView)base.View;
			}
		}
		#endregion

		#region Constructors
		// Called when created from unmanaged code
		public PersonenController(IntPtr handle) : base (handle)
		{
			Initialize();
		}

		// Called when created directly from a XIB file
		[Export("initWithCoder:")]
		public PersonenController(NSCoder coder) : base (coder)
		{
			Initialize();
		}

		// Call to load from the XIB/NIB file
		public PersonenController() : base("subviewPersonen", NSBundle.MainBundle)
		{
			Initialize();
		}

		// Shared initialization code
		void Initialize()
		{
		}
		#endregion

		#region Override Methods
		public override void AwakeFromNib()
		{
			base.AwakeFromNib();

			// Create the Personen Table Data Source and populate it
			ds = new PersonenDS(AppDelegate.Conn);

			if (PersonenTable != null)
			{
				// Populate the Product Table
				PersonenTable.DataSource = ds;
				PersonenTable.Delegate = new PersonenDelegate(this, ds);
			}
		}
		#endregion
	
		#region Custom Methods
		partial void PersoonAddClicked(Foundation.NSObject sender)
		{
			var newPersoon = new PersoonModel();
			/*
			var sheet = new PersoonEditorSheetController(newPersoon, true);
			// Wire-up
			sheet.PersonModified += (persoon) =>
			{
				// Save person to database
				persoon.Create(AppDelegate.Conn);

				if (PersonenTable != null)
				{
					ds.AddPersoon(persoon);
					ReloadTable();
				}
			};

			// Display sheet
			sheet.ShowSheet(NSApplication.SharedApplication.KeyWindow);
			*/
		}

		partial void PersoonRemoveClicked(Foundation.NSObject sender)
		{
			var selectedRowIndex = PersonenTable.SelectedRow;
			var selectedPerson = ds.Personen[(int)selectedRowIndex] as PersoonModel;
			selectedPerson.Delete(AppDelegate.Conn);
			ReloadTable();
		}

		public void ReloadTable()
		{
			PersonenTable.ReloadData();
		}

		[Export("RowDoubleClicked:")]
		public void RowDoubleClicked(NSObject sender)
		{
			Debug.WriteLine("Start: PersonenController.RowDoubleClicked"); 
			               
			var selectedPerson = ds.Personen[(int)PersonenTable.SelectedRow] as PersoonModel;

			AppDelegate.SelectedPersoon = selectedPerson;

			PerformSegue("PersoonEditSegue", this);

			/*
			Debug.WriteLine("Clicked: " + selectedPerson.ID + "|" + selectedPerson.Achternaam);

			var sheet = new PersoonEditorSheetController(selectedPerson, true);

			// Wire-up the person modified event
			sheet.PersonModified += (persoon) =>
			{
				// Save person to database
				persoon.Update(AppDelegate.Conn);

				if (PersonenTable != null)
				{
					ReloadTable();
				}
			};

			// Display sheet
			sheet.ShowSheet(NSApplication.SharedApplication.KeyWindow);
		*/
			Debug.WriteLine("Einde: PersonenController.RowDoubleClicked");
		}
		#endregion
	}
}
